---
import Breadcrumbs from "@components/Breadcrumbs.astro";
import Footer from "@components/Footer.astro";
import Header from "@components/Header.astro";
import Layout from "@layouts/Layout.astro";
import Card from "./_components/Card.astro";
import PrettyLink from "@components/PrettyLink.astro";
import Socials from "@components/Socials.astro";
import { SITE, SOCIALS } from "@config";

import { Content as Intro } from "./intro.md";

const socialCount = SOCIALS.filter(social => social.active).length;

const title = "About Me";
---

<Layout title=`${title} | ${SITE.title}` lang="en">
  <Header activeNav="about" />
  <Breadcrumbs />
  <main id="main-content">
    <section
      id="about"
      class="prose mb-28 max-w-3xl text-skin-base prose-img:border-0"
    >
      <h1 class="text-2xl tracking-wider sm:text-3xl">{title}</h1>
      <Intro />
      {
        // only display if at least one social link is enabled
        socialCount > 0 && (
          <div class="my-wrapper-114514">
            <div class="social-links">Social Links:</div>
            <Socials />
          </div>
        )
      }

      <h2>I was educated in</h2>
      <Card
        contents={[
          { text: "Senior high school", time: "2023-present" },
          { text: "Junior high school", time: "2019-2023" },
        ]}>Shenzhen Foreign Language School</Card
      >

      <h2>I participated in</h2>
      <Card contents={[{ text: "Vice Director", time: "2023-present" }]}
        ><PrettyLink href="https://sflsgeek.com/" className="font-semibold"
          >Geek Club</PrettyLink
        ></Card
      >

      <h2>I did</h2>
      <Card contents={[{ text: "Author", time: "2023-2024" }]}
        ><PrettyLink
          href="https://github.com/krishukr/telegram-cjk-search-bot"
          className="font-semibold">Telegram CJK Search Bot</PrettyLink
        ></Card
      >
      <Card contents={[{ text: "Builder & Maintainer", time: "2022-present" }]}
        >HomeLab</Card
      >
      <Card contents={[{ text: "Contributor", time: "2024" }]}
        ><PrettyLink
          href="https://github.com/project-trans/MtF-wiki"
          className="font-semibold">MtF.wiki</PrettyLink
        ></Card
      >
    </section>
  </main>
  <Footer />
</Layout>

<style>
  .my-wrapper-114514 {
    @apply mt-4 flex flex-col sm:flex-row sm:items-center;
  }
  .social-links {
    @apply mb-1 mr-2 whitespace-nowrap sm:mb-0;
  }
</style>

<script is:inline>
  /** Attaches copy buttons to code blocks in the document,
   * allowing users to copy code easily. */
  function attachCopyButtons() {
    let copyButtonLabel = "Copy";
    let codeBlocks = Array.from(document.querySelectorAll("pre"));

    for (let codeBlock of codeBlocks) {
      let wrapper = document.createElement("div");
      wrapper.style.position = "relative";

      let copyButton = document.createElement("button");
      copyButton.className =
        "copy-code absolute right-3 -top-3 rounded bg-skin-card px-2 py-1 text-xs leading-4 text-skin-base font-medium";
      copyButton.innerHTML = copyButtonLabel;
      codeBlock.setAttribute("tabindex", "0");
      codeBlock.appendChild(copyButton);

      // wrap codebock with relative parent element
      codeBlock?.parentNode?.insertBefore(wrapper, codeBlock);
      wrapper.appendChild(codeBlock);

      copyButton.addEventListener("click", async () => {
        await copyCode(codeBlock, copyButton);
      });
    }

    async function copyCode(block, button) {
      let code = block.querySelector("code");
      let text = code?.innerText;

      await navigator.clipboard.writeText(text ?? "");

      // visual feedback that task is completed
      button.innerText = "Copied";

      setTimeout(() => {
        button.innerText = copyButtonLabel;
      }, 700);
    }
  }
  attachCopyButtons();
</script>
